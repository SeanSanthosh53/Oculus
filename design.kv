
#: import NoTransition kivy.uix.screenmanager.NoTransition
#: import toast kivymd.toast.toast
#: import ScrollEffect kivy.effects.scroll.ScrollEffect
#: import win kivy.core.window.Window

<TooltipIconButton@MDTooltip+MDIconButton>

ScreenManager:
	id: sm
	transition: NoTransition()			

	MainScreen:
		id: main_screen
		manager: sm
	
	HelpScreen:
		name: "help"



<MainScreen>:
	name: "main"
	BoxLayout:
		orientation: "vertical"
		
		BoxLayout:
			orientation: "horizontal"
			size_hint: (1, .2)
			spacing: 500
			
			AnchorLayout:
				anchor_x: "left"
					
				Image:
					source: "./utils/ProjectKanbanLogo.png"
					size_hint: (None, None)
					width: 250
					height: 300
			
			MDBoxLayout:
				orienation: "horizontal"
				spacing: 100
				padding: 100
				
				
				TooltipIconButton:
					icon: "plus"
					tooltip_text: "Create new Project"
					on_press:
						app.make_project_dialog()
					pos_hint: {"y": 0.7}
					
				MDTextButton:
					icon: "help"
					text: "HELP"
					on_press:
						app.root.current = "help"
					font_name: "AquireLight"
					pos_hint: {"y": .5}
				
				
		
		ScrollView:
			effect_cls: ScrollEffect
			StackLayout:
				#StackLayout Properties
				orientation: "lr-tb"
				id: project_library
				spacing: 20
				padding: 15
				# Properties needed for ScrollView
				size_hint_y: None
				height: self.minimum_height




<ProjectContainer>:
	orientation: "vertical"
	size_hint: (None, None)
	size: (232.72727272727272, 340)
	on_press:
		app.root.current = self.title
		app.screen_order.remove(self.title)
		app.screen_order.insert(0, self.title)
		app.refresh_main()
		
	background_color: 0,0,0,0  # the last zero is the critical on, make invisible
	pos: (1000, 100)
	canvas.before:
		Color:
			rgba: self.prime_bg_color
		RoundedRectangle:
			pos: self.pos
			size: self.size
			radius: [20,]
	
	Label:
		id: date
		text: root.date
		halign: "center"
		valign: "middle"
		
	Label:
		id: title
		text: root.title
		font_name: "Paul"
		font_size: 30
		halign: "center"
		valign: "middle"

	MDBoxLayout:
		orientation: "vertical"
		text: "Don't"
		size_hint: (None, None)
		size: (232.72727272727272, 160)
		background_color: 0,0,0,0  # the last zero is the critical on, make invisible
		pos: self.parent.pos
		canvas.before:
			Color:
				rgba: root.second_bg_color
			RoundedRectangle:
				pos: self.parent.pos
				size: self.size
				radius: [20,]	
		Label:
			id: wip
			text: "Works in progress: " + root.wip
			font_name: "Nasa21"
			font_size: 20
			halign: "left"
			valign: "top"
			
		Label:
			id: wtd
			text: "Pending: " + root.wtd
			font_name: "Nasa21"
			font_size: 20
			halign: "left"
			valign: "top"


<BoardScreen>:
	
	# The Layout the Whole Screen is composed of
	BoxLayout:
		orientation: "vertical"
		
		BoxLayout:
			size_hint: (1, .15)
			padding: 30
			spacing: 30
			MDIconButton:
				icon: "keyboard-backspace"
				on_press:
					app.refresh_main()
					app.root.current = "main"

			Label:
				text: root.title
				font_name: "CabalBold"
				font_size: 40
				color: app.primary_colors["Light Purple"]
			
			TooltipIconButton:
				icon: "settings-outline"
				tooltip_text: "Board Settings"
				on_press:
					root.show_settings_dialog()
			
			TooltipIconButton:
				icon: "card-plus"
				tooltip_text: "Create new Card"
				on_press:
					app.add_card_dialog()
		
		# The Different categories of Cards
		MDBoxLayout:
			id: card_category_container
			padding: 20
			spacing: 20
			
			


<CardCategory>:
	
	# Each Category of cards
	#MDBoxLayout:
	orientation: "vertical"
		
	ColoredLabel:
		text: root.id
		size_hint: (1, .1)
	
	ScrollView:
		CardContainer:
			size_hint_y: None
			height: self.minimum_height
			id: cards
			name: f"{root.id}"
			orientation: "vertical"
			spacing: 10
			padding: 10
			
			Widget:
				size_hint: (1, 2)
				
		
		
		
						
			

<KanbanCard>:
	anchor_x: "center"
	anchor_y: "center"
	padding: 10
	spacing: 10
	size_hint: (None, None)
	xgddg: self.ids.task.texture_size[1] + self.ids.title.texture_size[1]
	size: (win.size[0] / self.categories - 50, 90 + self.xgddg)
		
	pos: (1000, 100)
	canvas.before:
		Color:
			rgba: self.color
		RoundedRectangle:
			pos: self.pos
			size: self.size
			radius: [10,]
	
	BoxLayout:
		id: container
		orientation: "vertical"
		padding: 10
		spacing: 10
		size_hint: (None, None)
		y_size: root.ids.task.texture_size[1] + root.ids.title.texture_size[1]
		size: (root.size[0] - 10, 80 + self.y_size)
			
		pos: (1000, 100)
		canvas.before:
			Color:
				rgba: (1,1,1,1)
			RoundedRectangle:
				pos: self.pos
				size: self.size
				radius: [10,]		
				
		
		MDLabel:
			id: title
			text: root.title
			font_name: "AovelSans"
			font_size: 30
			size_hint: (1, None)
			text_size: self.size
			height: self.texture_size[1]
			on_touch_down: pass
			halign: "left"
			color: (0,0,0,1)
		
		MDLabel:
			id: task
			text: root.task
			font_name: "Cabal"
			size_hint: (1, None)
			text_size: (None, None)
			height: self.texture_size[1]
			halign: "center"
			on_touch_down:
			color: (0,0,0,1)
		
		
		MDBoxLayout:
			size_hint: (1, None)
			height: 35
			MDIconButton:
				icon: "settings"
				on_press:
					root.show_settings()
			
			MDIconButton:
				icon: "arrow-left-right-bold-outline"
				on_press:
					root.move_card()
					
			MDLabel:
				text: root.due_date
				theme_text_color: "Secondary"
				font_size: 15
				halign: "right"
				valign: "bottom"
		






	
<LabelBackground@Widget>:
	background_color: (1,1,1,1)
	canvas.before:
		Color:
			rgba: root.background_color
		Rectangle:
			size: self.size
			pos: self.pos


<RoundedLabelBG@Widget>:
	canvas.before:
		Color:
			rgba: root.background_color
		Rectangle:
			size: self.size
			pos: self.pos


<ColoredLabel@Label+LabelBackground>
	background_color: (109/255, 145/255, 246/255, 1)
	halign: "center"


<BoardDialogItem>:
	on_press:
		self.parent.parent.parent.parent.dismiss()
		app.board_settings(*args)
	IconLeftWidget:
		icon: root.icon
		

<CardDialogItem>:
	on_press:
		self.parent.parent.parent.parent.dismiss()
		app.card_settings(*args)
	IconLeftWidget:
		icon: root.icon
		

<MoveCardDialogItem>:
	on_press:
		self.parent.parent.parent.parent.dismiss()
		app.move_card(self.text, self.parent.parent.parent.parent.card, self.parent.parent.parent.parent.card_category)
	IconLeftWidget:
		icon: root.icon
		

<AddCardDialogItem>:
	on_press:
		self.parent.parent.parent.parent.dismiss()
		app.add_card(*args)
	IconLeftWidget:
		icon: root.icon
		
	

		
<Content>
	orientation: "vertical"
	spacing: "12dp"
	size_hint_y: None
	height: "120dp"

	MDTextField:
		id: text_field
		text: root.text
		hint_text: root.hint
		max_text_length: 17 if self.hint_text == "New Project Name" else 100000
		input_filter: "int" if self.hint_text == "New 'Works in progress' limit" else None
		#mode: "rectangle"
		size_hint: (.5, None)
		pos_hint: {"x":.25}
		helper_text: "hi!"

<CardSettingsContent>
	orientation: "vertical"
	spacing: "12dp"
	size_hint_y: None
	height: "120dp"

	MDTextField:
		id: new_title
		text: root.title
		hint_text: "New Title:"
		mode: "rectangle"
		size_hint: (.5, None)
		pos_hint: {"x":.25}
	
	MDTextField:
		id: new_task
		text: root.task
		mode: "rectangle"
		hint_text: "New Task:"
		multiline: True
		size_hint: (.5, None)
		pos_hint: {"x":.25}
	
	MDRaisedButton:
		text: "Set Due Date"
		pos_hint: {"x": .4}
		on_press:
			app.set_card_due(app.card_due)
	
<AddCardContent>
	orientation: "vertical"
	spacing: "12dp"
	size_hint_y: None
	height: "120dp"

	MDTextField:
		id: title
		hint_text: "Title:"
		mode: "rectangle"
		size_hint: (.5, None)
		pos_hint: {"x":.25}
	
	MDTextField:
		id: task
		mode: "rectangle"
		hint_text: "Task:"
		multiline: True
		size_hint: (.5, None)
		pos_hint: {"x":.25}
	
	MDRaisedButton:
		text: "Set Due Date"
		pos_hint: {"x": .4}
		on_press:
			app.add_card_due()


	
<AddProjectContent>
	orientation: "vertical"
	spacing: "12dp"
	size_hint_y: None
	height: "120dp"

	MDTextField:
		id: new_project_name
		hint_text: "Project Name:"
		size_hint: (.5, None)
		pos_hint: {"x":.25}
		
	MDRaisedButton:
		text: "Set Due Date"
		pos_hint: {"x": .4}
		on_press:
			app.add_project_due()



<HelpScreen>:
	MDLabel:
		text: """Hi! First of all, thank you so much using my app! nnThis app is actually a project submitted to a coding competition (also called a 'Code Jam') named the 'Timathon'. It is held a Tech Youtuber called Tim every 2 months, making it an oportunity for hobbyist programers like us to put our skills to the test and be appreciated for our projects with various prizes. nnThis project was created on the theme "Visualisation" and I decided to make an app like this as this app uses the Kanban Method, which is a visualisation technique around the Globe!nn"Kanban" means "Visualisation Signal" in the Japanese langauge. It was first used by the famous Automobile Company "Toyota" to increase efficiency within the employees.nnIf you liked this app and do want to appreciate my work, vote me by clicking the button below!"""
	